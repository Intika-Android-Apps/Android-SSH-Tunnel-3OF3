package org.sshtunnel.db;

import com.j256.ormlite.field.DatabaseField;

/**
 * A simple demonstration object we are creating and persisting to the database.
 */
public class Profile {

	// id is generated by the database and set on the object automagically
	@DatabaseField(generatedId = true)
	int id;
	@DatabaseField
	String name;
	@DatabaseField
	String host;
	@DatabaseField
	String remoteAddress;
	@DatabaseField
	String user;
	@DatabaseField
	String password;
	@DatabaseField
	String keyPath;
	@DatabaseField
	String ssid;
	@DatabaseField
	String proxyedApps;
	@DatabaseField
	String upstreamProxy;
	@DatabaseField
	String fingerPrint;
	@DatabaseField
	String fingerPrintType;
	
	@DatabaseField
	int port;
	@DatabaseField
	int localPort;
	@DatabaseField
	int remotePort;
	
	@DatabaseField
	boolean isAutoReconnect;
	@DatabaseField
	boolean isAutoConnect;
	@DatabaseField
	boolean isAutoSetProxy;
	@DatabaseField
	boolean isGFWList;
	@DatabaseField
	boolean isSocks;
	@DatabaseField
	boolean isDNSProxy;
	@DatabaseField
	boolean isActive;
	@DatabaseField
	boolean isUpstreamProxy;

	Profile() {
		// needed by ormlite
		this("");
	}

	public Profile(String name) {
		this.name = name;
		this.host = "";
		this.port = 22;
		this.localPort = 1984;
		this.remotePort = 3128;
		this.remoteAddress = "127.0.0.1";
		this.user = "";
		this.password = "";
		this.isAutoReconnect = false;
		this.isAutoConnect = false;
		this.isAutoSetProxy = false;
		this.isGFWList = false;
		this.isSocks = false;
		this.isDNSProxy = true;
		this.isUpstreamProxy = false;
		this.keyPath = "/sdcard/sshtunnel/key";
		this.ssid = "";
		this.proxyedApps = "";
		this.upstreamProxy = "";
		this.fingerPrint = "";
		this.fingerPrintType = "";
	}

	public String getHost() {
		return host;
	}

	public int getId() {
		return id;
	}

	public String getKeyPath() {
		return keyPath;
	}

	public int getLocalPort() {
		return localPort;
	}

	public String getName() {
		return name;
	}

	public String getPassword() {
		return password;
	}

	public int getPort() {
		return port;
	}

	public String getProxyedApps() {
		return proxyedApps;
	}

	public String getRemoteAddress() {
		return remoteAddress;
	}

	public int getRemotePort() {
		return remotePort;
	}

	public String getSsid() {
		return ssid;
	}

	public String getUser() {
		return user;
	}
	
	public String getUpstreamProxy() {
		return upstreamProxy;
	}

	public boolean isAutoConnect() {
		return isAutoConnect;
	}

	public boolean isAutoReconnect() {
		return isAutoReconnect;
	}

	public boolean isAutoSetProxy() {
		return isAutoSetProxy;
	}

	public boolean isGFWList() {
		return isGFWList;
	}

	public boolean isSocks() {
		return isSocks;
	}
	
	public boolean isDNSProxy() {
		return isDNSProxy;
	}
	
	public boolean isActive() {
		return isActive;
	}
	
	public boolean isUpstreamProxy() {
		return isUpstreamProxy;
	}

	public void setAutoConnect(boolean isAutoConnect) {
		this.isAutoConnect = isAutoConnect;
	}

	public void setAutoReconnect(boolean isAutoReconnect) {
		this.isAutoReconnect = isAutoReconnect;
	}

	public void setAutoSetProxy(boolean isAutoSetProxy) {
		this.isAutoSetProxy = isAutoSetProxy;
	}

	public void setGFWList(boolean isGFWList) {
		this.isGFWList = isGFWList;
	}
	
	public void setDNSProxy(boolean isDNSProxy) {
		this.isDNSProxy = isDNSProxy;
	}
	
	public void setActive(boolean isActive) {
		this.isActive = isActive;
	}
	
	public void setIsUpstreamProxy(boolean isUpstreamProxy) {
		this.isUpstreamProxy = isUpstreamProxy;
	}

	public void setHost(String host) {
		this.host = host;
	}

	public void setId(int id) {
		this.id = id;
	}

	public void setKeyPath(String keyPath) {
		this.keyPath = keyPath;
	}

	public void setLocalPort(int localPort) {
		this.localPort = localPort;
	}

	public void setName(String name) {
		this.name = name;
	}

	public void setPassword(String password) {
		this.password = password;
	}

	public void setPort(int port) {
		this.port = port;
	}

	public void setProxyedApps(String proxyedApps) {
		this.proxyedApps = proxyedApps;
	}

	public void setRemoteAddress(String remoteAddress) {
		this.remoteAddress = remoteAddress;
	}

	public void setRemotePort(int remotePort) {
		this.remotePort = remotePort;
	}

	public void setSocks(boolean isSocks) {
		this.isSocks = isSocks;
	}

	public void setSsid(String ssid) {
		this.ssid = ssid;
	}

	public void setUser(String user) {
		this.user = user;
	}
	
	public void setUpstreamProxy (String upstreamProxy) {
		this.upstreamProxy = upstreamProxy;
	}
	
	
	public String getFingerPrint() {
		return fingerPrint;
	}

	public void setFingerPrint(String fingerPrint) {
		this.fingerPrint = fingerPrint;
	}

	public String getFingerPrintType() {
		return fingerPrintType;
	}

	public void setFingerPrintType(String fingerPrintType) {
		this.fingerPrintType = fingerPrintType;
	}

	@Override
	public String toString() {
		StringBuilder sb = new StringBuilder();
		sb.append("id=").append(id);
		sb.append(", ").append("name=").append(name);
		sb.append(", ").append("host=").append(host);
		sb.append(", ").append("port=").append(port);
		sb.append(", ").append("local_port=").append(localPort);
		sb.append(", ").append("remote_address=").append(remoteAddress);
		sb.append(", ").append("remote_port=").append(remotePort);
		sb.append(", ").append("isSocks=").append(isSocks);
		return sb.toString();
	}
	
	
}
